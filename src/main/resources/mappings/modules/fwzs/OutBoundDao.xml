<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.fwzs.master.modules.fwzs.dao.OutBoundDao">

	<sql id="outBoundColumns">
		a.id AS id,
		a.status AS status,
		a.outBound_no AS outBoundNo,
		a.dealer_id AS dealerId,
		a.remarks AS remarks,
		a.create_by AS "createBy.id",
		a.create_date AS "createDate",
		a.update_by AS "updateBy.id",
		a.update_date AS "updateDate",
		a.del_flag AS "delFlag"
	</sql>

	<sql id="outBoundColumnsNew">
		a.id AS id,
		a.outBound_no AS outBoundNo,
		a.dealer_id AS dealerId,
		a.status AS status,
		a.remarks AS remarks,
		a.create_by AS "createBy.id",
		a.create_date AS "createDate",
		a.update_by AS "updateBy.id",
		a.update_date AS "updateDate",
		a.bound_date AS "boundDate",
		a.receive_date AS "receiveDate",
		a.ship_no AS "shipNo",
		a.ship_name AS "shipName",
		a.del_flag AS "delFlag",
		outbound_prod_mapping.id AS "pp.id",
		outbound_prod_mapping.outBound_id AS "pp.outBoundId",
		outbound_prod_mapping.prod_id AS "pp.prodId",
		outbound_prod_mapping.warehouse_id AS "pp.warehouseId",
		outbound_prod_mapping.plan_number AS "pp.planNumber",
		outbound_prod_mapping.real_number AS "pp.realNumber",
		outbound_prod_mapping.remarks AS "pp.remark",
		outbound_prod_mapping.del_flag AS "pp.delFlag",
		p.id AS "bsProductList.id",
		p.prod_name AS "bsProductList.prodName",
		p.pack_rate AS "bsProductList.packRate",
		w.id AS "bsProductList.warehouse.id",
		w.name AS "bsProductList.warehouse.name",
		pda.id AS "pdaUser.id",
		pda.name AS "pdaUser.name",
		d.id AS "dealer.id",
		d.dealer_name AS "dealer.name"
	</sql>

    <sql id="boxcode2OutboundMappingColumns">
        po.box_code,
        po.box_code_type
    </sql>

	<sql id="outBoundJoins">
        LEFT JOIN outbound_product outbound_prod_mapping ON outbound_prod_mapping.outBound_id = a.id
		LEFT JOIN bs_dealer d ON a.dealer_id = d.id
  		LEFT JOIN bs_product p ON outbound_prod_mapping.prod_id = p.id
  		LEFT JOIN fwm_spec s ON p.prod_spec=s.id
  		LEFT JOIN bs_warehouse w ON outbound_prod_mapping.warehouse_id = w.id
  		LEFT JOIN bs_pda_user pda ON pda.id = a.pdaUser_id
		LEFT JOIN sys_office o ON p.company_id=o.id
	    LEFT JOIN sys_user u ON u.id = a.create_by
	</sql>

	<resultMap id="outBoundResult" type="outBound">
		<id property="id" column="id"/>
		<result property="outBoundNo" column="outBoundNo"/>
		<result property="status" column="status"/>
		<result property="remarks" column="remarks"/>
		<result property="createBy.id" column="createBy.id"/>
		<result property="createDate" column="createDate"/>
		<result property="updateBy.id" column="updateBy.id"/>
		<result property="updateDate" column="updateDate"/>
		<result property="boundDate" column="boundDate"/>
		<result property="receiveDate" column="receiveDate"/>
        <result property="shipNo" column="shipNo"/>
        <result property="shipName" column="shipName"/>
		<result property="delFlag" column="delFlag"/>
        <association property="dealer" javaType="Dealer">
            <id property="id" column="dealer.id"/>
            <result property="name" column="dealer.name"/>
        </association>
        <association property="pdaUser" javaType="PdaUser">
            <id property="id" column="pdaUser.id"/>
            <result property="name" column="pdaUser.name"/>
        </association>
        <collection property="bsProductList" ofType="BsProduct">
            <id property="outBound2ProductMappingId" column="pp.id" />
            <id property="id" column="bsProductList.id" />
            <id property="prodName" column="bsProductList.prodName" />
            <id property="packRate" column="bsProductList.packRate" />
            <id property="remark" column="pp.remark" />
            <id property="planNumber" column="pp.planNumber" />
            <id property="realNumber" column="pp.realNumber" />
            <association property="warehouse" javaType="Warehouse">
                <id property="id" column="bsProductList.warehouse.id"/>
                <result property="name" column="bsProductList.warehouse.name"/>
            </association>
        </collection>
	</resultMap>

    <select id="findQrCodeById" resultType="Qrcode2BoxcodeMapping">
        SELECT
            po.box_code AS qrCode,
            box.box_code AS boxCode,
            box.bigBox_code AS bigBoxCode
        FROM
            outbound AS o
            <choose>
                <when test="prodId != null and prodId != ''">
                    LEFT JOIN outbound_product AS op ON o.id = op.outBound_id AND op.prod_id=#{prodId}
                </when>
                <otherwise>
                    LEFT JOIN outbound_product AS op ON o.id = op.outBound_id
                </otherwise>
            </choose>
            LEFT JOIN outbound_boxcode AS po ON op.id = po.outBound_product_id
            LEFT JOIN fwm_qrcode AS qrcode ON qrcode.qrCode = po.box_code
            LEFT JOIN fwm_box_code AS box ON box.id = qrcode.box_code
        WHERE o.id = #{boundId} AND po.box_code_type = '1'
        UNION(
        SELECT
            fq.qrCode AS qrCode,
            f.box_code AS boxCode,
            f.bigBox_code AS bigBoxCode
        FROM
           fwm_box_code AS f
           LEFT JOIN fwm_qrcode AS fq ON fq.box_code = f.id
        WHERE f.box_code IN
           (SELECT
                po.box_code
            FROM
                outbound AS o
                <choose>
                    <when test="prodId != null and prodId != ''">
                        LEFT JOIN outbound_product AS op ON o.id = op.outBound_id AND op.prod_id=#{prodId}
                    </when>
                    <otherwise>
                        LEFT JOIN outbound_product AS op ON o.id = op.outBound_id
                    </otherwise>
                </choose>
                LEFT JOIN outbound_boxcode AS po ON op.id = po.outBound_product_id
            WHERE o.id = #{boundId} AND po.box_code_type = '2'))
        UNION(
        SELECT
            fq.qrCode AS qrCode,
            f.box_code AS boxCode,
            f.bigBox_code AS bigBoxCode
        FROM
            fwm_box_code AS f
            LEFT JOIN fwm_qrcode AS fq ON fq.box_code = f.id
        WHERE f.bigBox_code IN
            (SELECT
                 po.box_code
             FROM
                outbound AS o
                <choose>
                    <when test="prodId != null and prodId != ''">
                        LEFT JOIN outbound_product AS op ON o.id = op.outBound_id AND op.prod_id=#{prodId}
                    </when>
                    <otherwise>
                        LEFT JOIN outbound_product AS op ON o.id = op.outBound_id
                    </otherwise>
                </choose>
                LEFT JOIN outbound_boxcode AS po ON op.id = po.outBound_product_id
             WHERE o.id = #{boundId} AND po.box_code_type = '3'))
    </select>

	<select id="get" resultMap="outBoundResult">
		SELECT
		<include refid="outBoundColumnsNew"/>
		FROM outBound a
		<include refid="outBoundJoins"/>
		WHERE a.id = #{id}
	</select>

	<select id="findList" resultMap="outBoundResult">
		SELECT
		<include refid="outBoundColumnsNew"/>
		FROM outBound a
		<include refid="outBoundJoins"/>
        <where>
            a.del_flag = #{DEL_FLAG_NORMAL} AND outbound_prod_mapping.del_flag = #{DEL_FLAG_NORMAL}
            AND a.create_date BETWEEN #{beginDate} AND #{endDate}
            <if test="outBoundNo != null and outBoundNo != ''">
                AND LOWER (a.outBound_no) LIKE
                <if test="dbName == 'oracle'">#{outBoundNo}||'%'</if>
                <if test="dbName == 'mssql'">#{outBoundNo}+'%'</if>
                <if test="dbName == 'mysql'">concat(LOWER (#{outBoundNo}),'%')</if>
            </if>
            <if test="dealer != null and dealer.id != null and dealer.id != ''">
                AND d.id = #{dealer.id}
            </if>
            <if test="bsProduct != null and bsProduct.id != null and bsProduct.id != ''">
                AND p.id = #{bsProduct.id}
            </if>
            <if test="bsProduct != null and bsProduct.prodSpec != null and bsProduct.prodSpec.specCode != null and bsProduct.prodSpec.specCode != ''">
                AND s.spec_code = #{bsProduct.prodSpec.specCode}
            </if>
            <if test="status != null and status != ''">
                AND a.status = #{status}
            </if>
            ${sqlMap.dsf}
        </where>
        <choose>
            <when test="page !=null and page.orderBy != null and page.orderBy != ''">
                ORDER BY ${page.orderBy}
            </when>
            <otherwise>
                ORDER BY a.update_date DESC
            </otherwise>
        </choose>
	</select>

    <select id="findOutBoundsForPDA" resultMap="outBoundResult">
        SELECT
        <include refid="outBoundColumnsNew"/>
        FROM outBound a
        <include refid="outBoundJoins"/>
        <where>
            a.del_flag = #{DEL_FLAG_NORMAL} AND outbound_prod_mapping.del_flag = #{DEL_FLAG_NORMAL}
            AND a.status = #{status} AND u.company_id = #{companyId} AND a.pdaUser_id = #{pdaUser.id}
        </where>
    </select>

	<insert id="insert">
		INSERT INTO outBound(
		id,
		outBound_no,
		dealer_id,
		status,
		pdaUser_id,
		remarks,
		create_by,
		create_date,
		update_by,
		update_date,
		del_flag
		) VALUES (
		#{id},
		#{outBoundNo},
		#{dealer.id},
		#{status},
		#{pdaUser.id},
		#{remarks},
		#{createBy.id},
		#{createDate},
		#{updateBy.id},
		#{updateDate},
		#{delFlag}
		)
	</insert>

	<update id="update">
		UPDATE outBound SET
		outBound_no = #{outBoundNo},
		dealer_id = #{dealer.id},
		pdaUser_id = #{pdaUser.id},
		remarks = #{remarks}
		update_by = #{updateBy.id},
		update_date = #{updateDate},
		WHERE id = #{id}
	</update>

    <update id="updateStatus">
        UPDATE outbound SET status = #{status}
        <if test="boundDate != null and boundDate != ''">
            , bound_date = #{boundDate}
        </if>
        <if test="receiveDate != null and receiveDate != ''">
            , receive_date = #{receiveDate}
        </if>
        <if test="shipNo != null and shipNo != ''">
            , ship_no = #{shipNo}
        </if>
        <if test="shipName != null and shipName != ''">
            , ship_name = #{shipName}
        </if>
        WHERE id = #{id}
    </update>

	<update id="delete">
		UPDATE outBound SET
		del_flag = #{DEL_FLAG_DELETE}
		WHERE id = #{id}
	</update>
</mapper>